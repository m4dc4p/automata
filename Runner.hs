{-
Generation 100
Avg: 0.608
Max: 0.76
Top 10 rules
(0.76) [11001110100000011001111111111111100110100111100110000101111111011100110001010010011010111000110111000011001101011111101110110111]
(0.72) [01001111110110011001111111111111000110100111100110000101111111011100110001010010011010111000110111000011001101011111101110110111]
(0.72) [10101100101010011001111111111101100110100111100110000101111111011100110001010010011010111000110111000011001101011111101110110111]
(0.72) [10010101111010011001111111111111000110100111100110000101111111011100110001010010011010111000110111000011001101011111101110110111]
(0.72) [00111101001010011001111111111111000110100111100110000101111111011100110001010010011010111000110111000011001101011111101110110111]
(0.72) [11110111011000011001111111111111000110100111100110000101111111011100110001010010011010111000110111000011001101011111101110110111]
(0.72) [10011111000010011001111111111111000110100111100110000101111111011100110001010010011010111000110111000011001101011111101110110111]
(0.68) [00110110101010011001111111111111000110100111100110000101111111011100110001010010011010111000110111000011001101011111101110110111]
(0.68) [10110111110110011001111111111111000110100111100110000101111111011100110001010010011010111000110111000011001101011111101110110111]
(0.68) [10110111110110011001111111111111000110100111100110000101111111011100110001010010011010111000110111000011001101011111101110110111]
-}

import CA
import HCL

reqRule = do
  str <- prompt "Please enter a rule string: " reqResp
  return $! readRule str
  
main = execReq $ do
  rule <- reqRule
  iters <- prompt1 "How many iterations? " reqInt 100 
  caWidth <- prompt1 "How wide should the CA be?" reqInt 40 
  initial <- reqIO $ mkRandomCA caWidth
  reqIO $ mapM_ (putStrLn . show) (take iters $ sim rule initial)
  reqIO $ putStrLn $ "Used rule: " ++ show rule
